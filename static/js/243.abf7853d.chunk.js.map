{"version":3,"file":"static/js/243.abf7853d.chunk.js","mappings":"qMACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,+B,mBCcxN,EAXmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACxC,SAACC,EAAA,EAAO,CAACC,GAAIL,EAAK,SAAED,EAAMO,QAGhC,ECJA,EALgB,SAACP,GACf,OAAO,gBAAKG,UAAWC,EAAAA,OAAS,SAAEJ,EAAMQ,SAC1C,E,UC6CMC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACV,GACtB,OACE,kBAAMY,SAAUZ,EAAMa,aAAa,WACjC,0BACE,SAACC,EAAA,EAAK,CAACC,UAAU,WAAWR,KAAK,iBAAiBS,YAAY,0BAEhE,0BAAK,yCAGX,IAIA,EA5CgB,SAAChB,GAEf,IAAIiB,EAAQjB,EAAMkB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAK,SAAC,EAAU,CAACf,KAAMe,EAAEf,KAAiBL,GAAIoB,EAAEpB,IAAZoB,EAAEpB,GAAgB,IAC3FqB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACjB,QAASiB,EAAEjB,SAAciB,EAAEvB,GAAM,IACpEe,EAAMS,eAQ3B,OAAI1B,EAAM2B,QAGR,iBAAKxB,UAAWC,EAAAA,QAAU,WACxB,gBAAKD,UAAWC,EAAAA,aAAe,SAC5Be,KAEH,gBAAKhB,UAAWC,EAAAA,SAAW,UACzB,+BAAQmB,EAAgB,UAG1B,SAACd,EAAmB,CAACG,SAfL,SAACgB,GACnB5B,EAAM6B,YAAYD,EAAOF,eAC7B,QAE2B,SAACI,EAAA,EAAQ,CAACxB,GAAI,WAczC,E,2DC/BIyB,EAA6B,SAACd,GAAK,MAAM,CACzCU,OAAQV,EAAMe,KAAKL,OACpB,ECiBH,GAAeM,E,QAAAA,UACbC,EAAAA,EAAAA,KAlBoB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACiB,GACtB,MAAO,CACLN,YAAa,SAACH,GACZS,GAASC,EAAAA,EAAAA,GAAmBV,GAC9B,EAEN,KDVgC,SAACW,GAAe,IAEtCC,EAAiB,qGAKlB,OALkB,8BACnB,WACI,OAAKC,KAAKvC,MAAM2B,QAET,SAACU,GAAS,UAAKE,KAAKvC,SAFI,SAAC8B,EAAA,EAAQ,CAACxB,GAAG,UAGhD,KAAC,EALkB,CAASkC,EAAAA,WAUhC,OAFuCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,EAG/E,GCEA,CAGEG,E","sources":["webpack://it-react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"writeMessage\":\"Dialogs_writeMessage__38-Bo\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return <div className={s.dialog}>{props.message}</div>;\n};\n\n\nexport default Message;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\"\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Redirect } from \"react-router-dom\";\n\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d =>  <DialogItem name={d.name} key={d.id} id={d.id} /> );\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} /> );\n  let newMessageBody = state.newMessageBody;\n  \n\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n}\n\n  if(!props.isAuth) return <Redirect to={\"./login\"} /> ;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogsElements}\n      </div>\n      <div className={s.messages}>\n        <div> { messagesElements } </div>\n\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Enter your message\" />\n      </div>\n      <div><button>Send</button></div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\n\nexport default Dialogs;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {connect} from \"react-redux\"\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render () {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props}/>        \n        }\n    }\n      \n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); \n\n    return ConnectedAuthRedirectComponent;\n}","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\"\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n          }\n} \n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n      sendMessage: (newMessageBody) => {\n        dispatch(sendMessageCreator(newMessageBody));\n      }\n    }\n}\n\n\n\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"names":["props","path","id","className","s","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}