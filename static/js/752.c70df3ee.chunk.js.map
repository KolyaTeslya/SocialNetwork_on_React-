{"version":3,"file":"static/js/752.c70df3ee.chunk.js","mappings":"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","sources":["webpack://it-react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://it-react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://it-react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR5X1bnwLsxFXgAyBY00Kujl6PBKJ5t9fbVkg&usqp=CAU\" />\n      {props.message}\n      <div>\n        <span>like</span> {props.likesCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\"\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\nimport Textarea from \"../../common/FormsControls/FormsControls.jsx\";\n\nconst maxLength10 = maxLengthCreator(10); \n\nlet AddNewPostForm = (props) => {\n  return <form onSubmit={props.handleSubmit}>\n            <div>\n              <Field name=\"newPostText\" component={\"Textarea\"} placeholder={\"Post message\"}\n                     validate={[required, maxLength10 ]} />\n            </div>\n        <div>\n             <button> Add post</button>\n        </div>\n  </form>\n}\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm);\n\n\nconst MyPosts = (props) => {\n\nlet postsElements = \n    props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} />); \n\n  let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={s.postsBlock}>\n      <h3> My posts </h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>\n          { postsElements }\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\"\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => { \n        dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"contact\":\"ProfileInfo_contact__sQB8W\"};","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\nlet arr = [0, () => {}];\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  const activateEditMode = () => {\n      setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value); \n  }\n\n  return (\n    <div>\n      { !editMode &&\n        <div>\n          <b>Status: </b><span onDoubleClick={ activateEditMode }> {props.status || \"----\"} </span>\n        </div>\n      }\n      {editMode && (  \n        <div>\n          <input onChange={onStatusChange} autoFocus={true} \n                 onBlur={ deactivateEditMode }\n                 value={status} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { Input, Textarea } from \"../../common/FormsControls/FormsControls\";\nimport { createField } from \"../../common/FormsControls/FormsControls\";\n\nconst ProfileDataForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>save</button>\n      </div> \n      <div>\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\n      </div>\n      <div>\n        <b>Lookig for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n      </div>\n\n      <div>\n        <b>My professional skills</b>:\n        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n      </div>\n\n      <div>\n        <b>About me</b>:\n        {createField(\"About me\", \"aboutMe\", [], Textarea)}\n      </div>\n      {/* <div>\n          <b>Contacts</b>:{\" \"}\n          {Object.keys(profile.contacts).map((key) => {\n            return (\n            //   <Contact\n            //     key={key}\n            //     contactTitle={key}\n            //     contactValue={profile.contacts[key]}\n            //   />\n            );\n          })}\n        </div> */}\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\n  ProfileDataForm\n);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport s from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData);\n}\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n\n        { editMode \n              ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> \n              : <ProfileData goToEditMode={() =>{ setEditMode(true)}} profile={profile} isOwner={isOwner} /> }\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n      <div>\n        <b>Full name</b>: {profile.fullName}\n      </div>\n      <div>\n        <b>Lookig for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\n        </div>\n      )}\n\n      <div>\n        <b>About me</b>: {profile.aboutMe}\n      </div>\n      <div>\n        <b>Contacts</b>:{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactTitle}</b>: {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n        <ProfileInfo savePhoto={props.savePhoto}\n                     isOwner={props.isOwner} \n                     profile={props.profile} \n                     status={props.status} \n                     saveProfile={props.saveProfile}\n                     updateStatus={props.updateStatus} />\n        <MyPostsContainer />\n      </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport {\n  getStatus,\n  updateStatus,\n  savePhoto, \n  saveProfile\n} from \"../../redux/profile-reducer\";\n\n\nclass ProfileContainer extends React.Component {\n  \n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if(!userId) {\n      userId = this.props.authorizedUserId; // 27619\n      if(!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId != prevProps.match.params.userId) {\n       this.refreshProfile()\n    }\n  }\n  \n  render() {\n    return (\n        <Profile {...this.props} \n          isOwner={!this.props.match.params.userId}\n          profile={this.props.profile} \n          status={this.props.status } \n          updateStatus = {this.props.updateStatus}\n          savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n}\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter\n)(ProfileContainer);\n\n\n\n\n\n\n"],"names":["props","className","s","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","placeholder","validate","required","postsElements","posts","map","p","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","createField","Input","type","Textarea","ProfileData","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}